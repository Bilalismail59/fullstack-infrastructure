name: Fullstack Infrastructure CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'preprod'
        type: choice
        options:
          - preprod
          - prod

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  TERRAFORM_VERSION: 1.5.0

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format
        run: |
          cd terraform
          terraform fmt -check

      - name: Terraform Validate
        run: |
          cd terraform
          terraform init -backend=false
          terraform validate

      - name: Validate Scripts
        run: |
          find scripts -name "*.sh" -type f -exec bash -n {} \;

  deploy:
    name: Deploy Infrastructure
    needs: validate
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Create service account key file
        run: |
          cd terraform
          echo '${{ secrets.GCP_SA_KEY }}' > service-account-key.json

      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=preprod" >> $GITHUB_ENV
          fi

      - name: Deploy infrastructure
        run: |
          chmod +x scripts/complete-infrastructure.sh
          ./scripts/complete-infrastructure.sh ${{ env.ENVIRONMENT }}

      - name: Test deployment
        run: |
          chmod +x scripts/wait-and-test.sh
          ./scripts/wait-and-test.sh

      - name: Get deployment URLs
        run: |
          cd terraform
          LB_IP=$(terraform output -raw load_balancer_ip 2>/dev/null || echo "N/A")
          MONITORING_IP=$(terraform output -raw monitoring_instance_ip 2>/dev/null || echo "N/A")
          
          echo "##  Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ env.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Application:** http://$LB_IP" >> $GITHUB_STEP_SUMMARY
          echo "- **Grafana:** http://$MONITORING_IP:3000 (admin/admin123)" >> $GITHUB_STEP_SUMMARY
          echo "- **Prometheus:** http://$MONITORING_IP:9090" >> $GITHUB_STEP_SUMMARY

  cleanup:
    name: Cleanup Resources
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && contains(github.event.inputs.environment, 'cleanup')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Run cleanup script
        run: |
          chmod +x scripts/cleanup-gcp.sh
          ./scripts/cleanup-gcp.sh preprod
